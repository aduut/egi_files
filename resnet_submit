 
# The UNIVERSE defines an execution environment. You will almost always use VANILLA.
Universe = vanilla

# These are good base requirements for your jobs on OSG. It is specific on OS and
# OS version, core count and memory, and wants to use the software modules. 
Requirements = OSGVO_OS_STRING == "RHEL 6" && Arch == "X86_64" &&  HAS_MODULES == True
request_cpus = 4
request_memory = 16 GB

# EXECUTABLE is the program your job will run It's often useful
# to create a shell script to "wrap" your actual work.
Executable = /home/duutabib/resnet_job.sh 
Arguments =resnet_script.py

# ERROR and OUTPUT are the error and output channels from your job
# that HTCondor returns from the remote host.
transfer_input_files = resnet_script.py, figures, osg_container_resnet_plots
Error = job.$(Cluster).$(Process).error
Output = job.$(Cluster).$(Process).output

# The LOG file is where HTCondor places information about your
# job's status, success, and resource consumption.
Log = job.log

# Send the job to Held state on failure. 
on_exit_hold = (ExitBySignal == True) || (ExitCode != 0)

# Periodically retry the jobs every 1 hour, up to a maximum of 5 retries.
periodic_release =  (NumJobStarts < 5) && ((CurrentTime - EnteredCurrentStatus) > 60*60)

#Project specification
+ProjectName = "osg.ConnectTrain"

#Requirements
Requirements = HAS_SINGULARITY == True 
+SingularityImage = "/cvmfs/singularity.opensciencegrid.org/opensciencegrid/tensorflow:latest"

# QUEUE is the "start button" - it launches any jobs that have been
# specified thus far.
Queue 1

